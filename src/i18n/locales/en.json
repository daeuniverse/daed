{
  "account settings": "Account Settings",
  "actions": {
    "add": "Add",
    "advanced mode": "Advanced Mode",
    "already have an account, login instead": "Already have an account, login instead",
    "cancel": "Cancel",
    "change endpoint": "Change Endpoint",
    "confirm": "Confirm",
    "continue": "Continue",
    "create": "New",
    "create account": "Create Account",
    "edit": "Edit",
    "hide": "Hide",
    "import": "Import",
    "import resource": "Import {{ name }}",
    "login": "Login",
    "logout": "Logout",
    "refresh": "Refresh",
    "reload": "Reload",
    "remove": "Remove",
    "rename": "Rename",
    "reset": "Reset",
    "save dae": "Save dae",
    "show content": "Show content",
    "simple mode": "Simple Mode",
    "skip": "Skip",
    "start your journey": "Start your journey",
    "submit": "Submit",
    "switchLanguage": "Switch Language",
    "switchRunning": "Switch Running",
    "switchTheme": "Switch Theme"
  },
  "address": "address",
  "allowInsecure": "Allow Insecure",
  "autoConfigKernelParameter": "Auto Config Kernel Parameter",
  "autoDetect": "Auto Detect",
  "avatar": "avatar",
  "checkInterval": "Check Interval",
  "checkTolerance": "Check Tolerance",
  "collapse": "collapse",
  "config": "Config",
  "configureNode": {
    "congestionControl": "Congestion Control",
    "disableSNI": "Disable SNI",
    "dtlsObfuscation": "Obfuscated as DTLS1.2 Packets",
    "forceTLS": "Enforce TLS",
    "host": "Host",
    "hostObfuscation": "Host",
    "httpObfuscation": "Obfuscated as HTTP",
    "name": "Name",
    "network": "Network",
    "noObfuscation": "No obfuscation",
    "obfs": "Obfuscation",
    "obfsParam": "Obfuscation Paramemeter",
    "obfsPassword": "Obfuscation Password",
    "origin": "origin",
    "password": "Password",
    "path": "Path",
    "pathObfuscation": "Path",
    "pinned_certchain_sha256": "Pinned Certchain SHA256",
    "port": "Port",
    "protocol": "Protocol",
    "protocolParam": "Protocol Parameter",
    "security": "Security",
    "seedObfuscation": "Seed",
    "servername": "Server Name",
    "srtpObfuscation": "Obfuscated as Video Calls (SRTP)",
    "title": "Configure Node",
    "type": "Type",
    "udpRelayMode": "UDP Relay Mode",
    "username": "Username",
    "utpObfuscation": "Obfuscated as Bittorrent (uTP)",
    "websocketHost": "WebSocket Host",
    "websocketPath": "WebSocket Path",
    "wechatVideoObfuscation": "Obfuscated as WeChat Video Calls",
    "wireguardObfuscation": "Obfuscated as WireGuard Packets"
  },
  "confirmModal": {
    "cancel": "No, It's a mistake",
    "confirm": "Yes, I'm sure",
    "removeConfirmDescription": "Are you sure you want to remove this?"
  },
  "connected": "connected",
  "connecting options": "Connecting Options",
  "create account": "Create a new account",
  "dark mode": "Dark Mode",
  "debug": "debug",
  "descriptions": {
    "config": {
      "allowInsecure": "Allow insecure TLS certificates. It is not recommended to turn it on unless you have to.",
      "autoConfigKernelParameter": "Automatically configure Linux kernel parameters like ip_forward and send_redirects.",
      "checkTolerance": "Group will switch node only when new_latency <= old_latency - tolerance.",
      "dialMode": {
        "domain": "Dial proxy using the domain from sniffing. This will greatly relieve DNS pollution problem in an impure DNS environment. Generally, this mode brings faster proxy response time because proxy will re-resolve the domain remotely, contributing to better IP results. This policy does not impact routing. That is to say, domain rewrite will be routed after traffic split and dae will not re-route it.",
        "domain+": "Based on domain mode but do not check the reality of sniffed domain. It is useful for users whose DNS requests do not go through dae but want faster proxy response time. Notice that, if DNS requests do not go through dae, dae cannot split traffic by domain.",
        "domain++": "Based on domain+ mode but enforce traffic re-routing using sniffed domain. It can also partially restore the ability to split traffic based on domains. However, it doesn't work for direct traffic and consumes more CPU resources.",
        "ip": "Dial proxy using the IP from DNS directly. This allows your IPv4, IPv6 to choose the optimal path respectively, and makes the IP version requested by the application meet expectations. For example, if you use curl -4 ip.sb, you will request IPv4 via proxy and get an IPv4 echo. And curl -6 ip.sb will request IPv6. This may solve some weird full-cone problems if your node supports that. Sniffing will be disabled in this mode."
      },
      "disableWaitingNetwork": "Disable waiting for network before pulling subscriptions.",
      "lanInterface": "The LAN interface to bind. Use it if you want to proxy LAN.",
      "sniffingTimeout": "This parameter sets the wait time for the first data transmission during sniffing. It is always 0 if dial mode set to 'ip'. Increasing this value can be helpful in high-latency LAN environments.",
      "soMarkFromDae": "If not zero, traffic sent from dae will be marked (SO_MARK). It is useful to avoid traffic loop with iptables/nftables tproxy rules.",
      "tcpCheckHttpMethod": "The HTTP request method to TCP Check HTTP Method. Use HEAD by default because some server implementations bypass accounting for this kind of traffic.",
      "tcpCheckUrl": "Both IPv4 and IPv6 are required for the host of URL if your local network supports both. First is URL, others are IP addresses if given. Considering traffic consumption, it is recommended to choose a site with anycast IP and less traffic.",
      "tlsImplementation": "Choose 'tls' to use Go's crypto/tls for standard TLS implementation, or 'utls' to use uTLS which can imitate browser's Client Hello.",
      "tproxyPort": "Transparent Proxy Port to listen on. Valid range is 0 - 65535. It is NOT a HTTP/SOCKS port, and is just used by eBPF program. In normal case, you do not need to use it.",
      "tproxyPortProtect": "Set it true to protect tproxy port from unsolicited traffic. Set it false to allow users to use self-managed iptables tproxy rules.",
      "udpCheckDns": "This DNS will be used to check UDP connectivity of nodes. And if the DNS upstream below contains tcp, it also be used to check TCP DNS connectivity of nodes. First is URL, others are IP addresses if given. Both IPv4 and IPv6 are required for this DNS if your local network supports both.",
      "utlsImitate": "The Client Hello ID for uTLS to imitate. This takes effect only if tls_implementation is utls.",
      "wanInterface": "The WAN interface to bind. Use it if you want to proxy localhost.",
      "pprofPort": "Pprof Port",
      "mptcp": "Enable MPTCP",
      "bandwidthMaxTx": "The maximum bandwidth for accessing the Internet. It is useful for some specific protocols (e.g., Hysteria2). '200 mbps' # uplink, '200 m', '200 mb', '200 mbps' or 25000000 (which is 200/8*1000*1000)",
      "bandwidthMaxRx": "The maximum bandwidth for accessing the Internet. It is useful for some specific protocols (e.g., Hysteria2). '200 mbps' # downlink, '200 m', '200 mb', '200 mbps' or 25000000 (which is 200/8*1000*1000)"
    },
    "group": {
      "Min": "For each connection, select the node that has minimum latency based on the latest measurement from the group",
      "MinAvg10": "For each connection, select the node that has minimum average latency based on last 10 measurements from the group",
      "MinMovingAvg": "For each connection, select the node that has minimum moving average of latency values from the group",
      "Random": "For each connection, randomly select a node from the group",
      "Fixed": "For each connection, select a fixed node from the group. Only one node in the group is required"
    }
  },
  "dialMode": "Dial Mode",
  "disableWaitingNetwork": "Disable Waiting Network",
  "disconnected": "disconnected",
  "display name": "Display Name",
  "dns": "DNS",
  "dnsUpstream": "DNS Upstream",
  "domain": "domain",
  "domain+": "domain+",
  "endpointURL": "Endpoint URL",
  "error": "error",
  "experiment": "Experiment",
  "global": "Global",
  "group": "Group",
  "info": "info",
  "interface and kernel options": "Interface and Kernel Options",
  "ip": "IP Address",
  "lanInterface": "LAN Interface",
  "lanNatDirect": "LAN NAT Direct connection",
  "link": "Link",
  "logLevel": "Log Level",
  "login account": "Login via username & password",
  "milliseconds": "ms",
  "name": "Name",
  "node": "Node",
  "node connectivity check": "Node Connectivity Check",
  "notifications": {
    "login succeeded": "Login Succeeded",
    "success": "Success"
  },
  "operations": "operations",
  "orchestrate": "Orchestrate",
  "password": "Password",
  "please select a config first": "Please select a config first",
  "policy": "Policy",
  "policyParams": "Policy Parameters",
  "protocol": "Protocol",
  "resource": "Resource",
  "routing": "Routing",
  "rule": "Rule",
  "seconds": "seconds",
  "select": "select",
  "selected": "selected",
  "settings": "Settings",
  "setup endpoint": "Setup your backend (GraphQL) endpoint URL",
  "sniffingTimeout": "Sniffing Timeout",
  "soMarkFromDae": "Set socket mark for dae",
  "software options": "Software Options",
  "step": "Step",
  "subscription": "Subscription",
  "success": "Success",
  "tag": "Tag",
  "tcpCheckHttpMethod": "TCP Check HTTP Method",
  "tcpCheckUrl": "TCP Check URL",
  "tlsImplementation": "TLS Implementation",
  "tproxyPort": "Transparent Proxy Port",
  "tproxyPortProtect": "Tproxy Port Protection",
  "pprofPort": "pprof Port",
  "enableLocalTcpFastRedirect": "Enable Local TCP Fast Redirect",
  "mptcp": "MPTCP",
  "bandwidthMaxTx": "Max Transmit Bandwidth",
  "bandwidthMaxRx": "Max Receive Bandwidth",
  "trace": "trace",
  "udpCheckDns": "DNS for UDP Check",
  "updatedAt": "Updated at",
  "user": "User",
  "username": "Username",
  "utlsImitate": "uTLS Imitation",
  "value": "value",
  "wanInterface": "WAN Interface",
  "warn": "warn",
  "welcome back": "Welcome Back!",
  "welcome to": "Welcome to {{ name }}",
  "what for": "A Modern Dashboard For"
}
