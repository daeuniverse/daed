name: Build (Nightly)

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - develop-pr-*
    paths-ignore:
      - '**/*.md'
      - README.md
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  checkout-full-src:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Download wing vendor
        run: go mod vendor
        working-directory: wing

      - name: Create full source ZIP archive and Signature
        run: |
          zip -9vr daed-full-src.zip . -x .git/\*
          FILE=./daed-full-src.zip
          DGST=$FILE.dgst
          md5sum        $FILE >>$DGST
          shasum -a 1   $FILE >>$DGST
          shasum -a 256 $FILE >>$DGST
          shasum -a 512 $FILE >>$DGST

      - name: Upload artifact - full source
        uses: actions/upload-artifact@v3
        with:
          name: daed-full-src
          path: daed-full-src.zip

  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: latest

      - name: Build
        run: |
          pnpm install
          pnpm build

      - name: Upload artifact - web
        uses: actions/upload-artifact@v3
        with:
          name: web
          path: dist

  build-bundle:
    needs: build-web
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux]
        goarch: [arm64]

        include:
          # BEGIN Linux ARM 5 6 7
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 5
          # END Linux ARM 5 6 7

          # BEGIN Linux AMD64 v1 v2 v3
          - goos: linux
            goarch: amd64
            goamd64: v1
          - goos: linux
            goarch: amd64
            goamd64: v2
          - goos: linux
            goarch: amd64
            goamd64: v3
          # END Linux AMD64 v1 v2 v3
      fail-fast: false

    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      GOAMD64: ${{ matrix.goamd64 }}
      CGO_ENABLED: ${{ matrix.cgo_enabled || 0 }}
      CC: ${{ matrix.cc }}

    steps:
      - uses: actions/checkout@v3

      - name: Get the version
        id: get_version
        env:
          REF: ${{ github.ref }}
        run: |
          if [[ "$REF" == "refs/tags/v"* ]]; then
            tag=$(git describe --tags $(git rev-list --tags --max-count=1))
            version=${tag}
            package_version="$(echo $tag | sed 's|v||g')"
          else
            date=$(git log -1 --format="%cd" --date=short | sed s/-//g)
            count=$(git rev-list --count HEAD)
            commit=$(git rev-parse --short HEAD)
            version="unstable-$date.r${count}.$commit"
            package_version="$date.r${count}.$commit"
          fi
          echo "VERSION=$version" >> $GITHUB_OUTPUT
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$package_version" >> $GITHUB_OUTPUT
          echo "PACKAGE_VERSION=$package_version" >> $GITHUB_ENV

      - name: Get the filename
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOAMD64\"].friendlyName" -r < install/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, RELEASE_NAME: $_NAME"
          echo "BUNDLE_NAME=daed-$_NAME" >> $GITHUB_OUTPUT

      - name: Download artifact - web
        uses: actions/download-artifact@v3
        with:
          name: web
          path: dist/

      - name: make
        run: |
          mkdir -p ./bundled/
          export VERSION=${{ steps.get_version.outputs.VERSION }}
          export GOFLAGS="-trimpath -modcacherw"
          export OUTPUT=bundled/${{ steps.get_filename.outputs.BUNDLE_NAME }}
          make
          cp ./install/daed.service ./bundled/
          curl -L -o ./bundled/geoip.dat https://github.com/v2rayA/dist-v2ray-rules-dat/raw/master/geoip.dat
          curl -L -o ./bundled/geosite.dat https://github.com/v2rayA/dist-v2ray-rules-dat/raw/master/geosite.dat

      - name: Smoking test
        if: matrix.goarch == 'amd64' && matrix.goamd64 == 'v1'
        run: ./bundled/${{ steps.get_filename.outputs.BUNDLE_NAME }} --version

      - name: Create binary ZIP archive and Signature
        run: |
          pushd bundled || exit 1
          zip -9vr ../${{ steps.get_filename.outputs.BUNDLE_NAME }}.zip .
          popd || exit 1
          FILE=./${{ steps.get_filename.outputs.BUNDLE_NAME }}.zip
          DGST=$FILE.dgst
          md5sum        $FILE >>$DGST
          shasum -a 1   $FILE >>$DGST
          shasum -a 256 $FILE >>$DGST
          shasum -a 512 $FILE >>$DGST

      - name: Upload artifact - bundle
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get_filename.outputs.BUNDLE_NAME }}
          path: bundled/*

      - name: Upload artifact - bundle-all
        uses: actions/upload-artifact@v3
        with:
          name: bundled-all
          path: ${{ steps.get_filename.outputs.BUNDLE_NAME }}.zip
