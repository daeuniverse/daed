name: Publish Docker Image

on:
  workflow_dispatch:
  release:
    types: [prereleased]

jobs:
  publish-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Codebase
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Prepare Tag
        # Borrowed from daeuniverse/dae
        id: prep
        env:
          REF: ${{ github.ref }}
        run: |
          if [[ "$REF" == "refs/tags/v"* ]]; then
            tag=$(git describe --tags $(git rev-list --tags --max-count=1))
            tag=${tag:1}
          else
            tag=$(git log -1 --format="%cd" --date=short | sed s/-//g)
          fi
          echo "IMAGE=daeuniverse/daed" >> $GITHUB_OUTPUT
          echo "TAG=$tag" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      # - name: Login to quay.io
      #   uses: docker/login-action@v2
      #   with:
      #     registry: quay.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.QUAY_PASS }}

      - name: Login to ghrc.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            quay.io/${{ github.repository }}:${{ steps.prep.outputs.TAG }}
            quay.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.prep.outputs.TAG }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
