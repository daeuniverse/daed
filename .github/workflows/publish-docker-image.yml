# name: Publish Docker Image
#
# on:
#   workflow_dispatch:
#   release:
#     types: [prereleased, released]
#
# jobs:
#   publish-docker-image:
#     runs-on: ubuntu-latest
#
#     steps:
#       - name: Checkout Codebase
#         uses: actions/checkout@v3
#         with:
#           submodules: 'recursive'
#
#       - name: Prepare Tag
#         # Borrowed from daeuniverse/dae
#         id: prep
#         env:
#           REF: ${{ github.ref }}
#         run: |
#           if [[ "$REF" == "refs/tags/v"* ]]; then
#             tag=$(git describe --tags $(git rev-list --tags --max-count=1))
#             tag=${tag:1}
#           else
#             tag=$(git log -1 --format="%cd" --date=short | sed s/-//g)
#           fi
#           echo "IMAGE=daeuniverse/daed" >> $GITHUB_OUTPUT
#           echo "TAG=$tag" >> $GITHUB_OUTPUT
#
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2
#
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#         id: buildx
#
#       - name: Login to dockerhub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASS }}
#
#       - name: Login to quay.io
#         uses: docker/login-action@v2
#         with:
#           registry: quay.io
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.QUAY_PASS }}
#
#       - name: Login to ghcr.io
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#
#       - name: Build image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           builder: ${{ steps.buildx.outputs.name }}
#           file: Dockerfile
#           platforms: linux/amd64,linux/arm64,linux/ppc64le
#           push: true
#           tags: |
#             ${{ github.repository }}:${{ steps.prep.outputs.TAG }}
#             ${{ github.repository }}:latest
#             quay.io/${{ github.repository }}:${{ steps.prep.outputs.TAG }}
#             quay.io/${{ github.repository }}:latest
#             ghcr.io/${{ github.repository }}:${{ steps.prep.outputs.TAG }}
#             ghcr.io/${{ github.repository }}:latest
#           cache-from: type=gha
#           cache-to: type=gha,mode=max





# name: Publish Docker Image
#
# on:
#   workflow_dispatch:
#   release:
#     types: [prereleased, released]
#
# jobs:
#   publish-docker-image-amd64-arm64:
#     runs-on: ubuntu-latest
#
#     steps:
#       - name: Checkout Codebase
#         uses: actions/checkout@v3
#         with:
#           submodules: 'recursive'
#
#       - name: Prepare Tag
#         # Borrowed from daeuniverse/dae
#         id: prep
#         env:
#           REF: ${{ github.ref }}
#         run: |
#           if [[ "$REF" == "refs/tags/v"* ]]; then
#             tag=$(git describe --tags $(git rev-list --tags --max-count=1))
#             tag=${tag:1}
#           else
#             tag=$(git log -1 --format="%cd" --date=short | sed s/-//g)
#           fi
#           echo "IMAGE=huangqizigailee/daed" >> $GITHUB_OUTPUT
#           echo "TAG=$tag" >> $GITHUB_OUTPUT
#
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2
#
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#         id: buildx
#
#       - name: Login to dockerhub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASS }}
#
#       # - name: Login to quay.io
#       #   uses: docker/login-action@v2
#       #   with:
#       #     registry: quay.io
#       #     username: ${{ github.repository_owner }}
#       #     password: ${{ secrets.QUAY_PASS }}
#
#       - name: Login to ghcr.io
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#
#       - name: Build image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           builder: ${{ steps.buildx.outputs.name }}
#           file: Dockerfile
#           platforms: linux/amd64,linux/arm64,linux/ppc64le
#           push: true
#           tags: |
#             ${{ github.repository }}:${{ steps.prep.outputs.TAG }}
#             ${{ github.repository }}:latest
#             ghcr.io/${{ github.repository }}:${{ steps.prep.outputs.TAG }}
#             ghcr.io/${{ github.repository }}:latest
#           cache-from: type=gha
#           cache-to: type=gha,mode=max











name: Publish Docker Image

on:
  workflow_dispatch:
  release:
    types: [prereleased, released]
  # schedule:
  #   - cron: "0 10 * * *"
  # push:
  #   branches:
  #     - "**"
  #   tags:
  #     - "v*.*.*"
  # pull_request:
  #   branches:
  #     - "main"

jobs:
  publish-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
#            quay.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # id: buildx

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Login to quay.io
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v3
      #   with:
      #     registry: quay.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.QUAY_PASS }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          # builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
